/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: contact@fslabs.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Block
 */
export interface Block {
    /**
     * 
     * @type {number}
     * @memberof Block
     */
    endLt: number;
    /**
     * 
     * @type {string}
     * @memberof Block
     */
    fileHash: string;
    /**
     * 
     * @type {string}
     * @memberof Block
     */
    rootHash: string;
    /**
     * 
     * @type {number}
     * @memberof Block
     */
    seqno: number;
    /**
     * 
     * @type {string}
     * @memberof Block
     */
    shard: string;
    /**
     * 
     * @type {number}
     * @memberof Block
     */
    startLt: number;
    /**
     * 
     * @type {number}
     * @memberof Block
     */
    workchainId: number;
}

/**
 * Check if a given object implements the Block interface.
 */
export function instanceOfBlock(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "endLt" in value;
    isInstance = isInstance && "fileHash" in value;
    isInstance = isInstance && "rootHash" in value;
    isInstance = isInstance && "seqno" in value;
    isInstance = isInstance && "shard" in value;
    isInstance = isInstance && "startLt" in value;
    isInstance = isInstance && "workchainId" in value;

    return isInstance;
}

export function BlockFromJSON(json: any): Block {
    return BlockFromJSONTyped(json, false);
}

export function BlockFromJSONTyped(json: any, ignoreDiscriminator: boolean): Block {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'endLt': json['end_lt'],
        'fileHash': json['file_hash'],
        'rootHash': json['root_hash'],
        'seqno': json['seqno'],
        'shard': json['shard'],
        'startLt': json['start_lt'],
        'workchainId': json['workchain_id'],
    };
}

export function BlockToJSON(value?: Block | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'end_lt': value.endLt,
        'file_hash': value.fileHash,
        'root_hash': value.rootHash,
        'seqno': value.seqno,
        'shard': value.shard,
        'start_lt': value.startLt,
        'workchain_id': value.workchainId,
    };
}

