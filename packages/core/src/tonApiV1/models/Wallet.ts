/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: contact@fslabs.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Wallet
 */
export interface Wallet {
    /**
     * 
     * @type {string}
     * @memberof Wallet
     */
    address: string;
    /**
     * 
     * @type {number}
     * @memberof Wallet
     */
    balance: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof Wallet
     */
    interfaces: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof Wallet
     */
    status: string;
}

/**
 * Check if a given object implements the Wallet interface.
 */
export function instanceOfWallet(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "address" in value;
    isInstance = isInstance && "balance" in value;
    isInstance = isInstance && "interfaces" in value;
    isInstance = isInstance && "status" in value;

    return isInstance;
}

export function WalletFromJSON(json: any): Wallet {
    return WalletFromJSONTyped(json, false);
}

export function WalletFromJSONTyped(json: any, ignoreDiscriminator: boolean): Wallet {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'address': json['address'],
        'balance': json['balance'],
        'interfaces': json['interfaces'],
        'status': json['status'],
    };
}

export function WalletToJSON(value?: Wallet | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'address': value.address,
        'balance': value.balance,
        'interfaces': value.interfaces,
        'status': value.status,
    };
}

