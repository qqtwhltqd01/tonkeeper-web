/* tslint:disable */
/* eslint-disable */
/**
 * REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: contact@tonaps.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Message,
  MessageID,
  PingReadyGet500Response,
  SendMessageRequest,
} from '../models/index';
import {
    MessageFromJSON,
    MessageToJSON,
    MessageIDFromJSON,
    MessageIDToJSON,
    PingReadyGet500ResponseFromJSON,
    PingReadyGet500ResponseToJSON,
    SendMessageRequestFromJSON,
    SendMessageRequestToJSON,
} from '../models/index';

export interface GetMessageInfoRequest {
    id: string;
}

export interface SendMessageOperationRequest {
    sendMessageRequest?: SendMessageRequest;
}

/**
 * MessageApi - interface
 * 
 * @export
 * @interface MessageApiInterface
 */
export interface MessageApiInterface {
    /**
     * 
     * @summary Get message info
     * @param {string} id Message ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MessageApiInterface
     */
    getMessageInfoRaw(requestParameters: GetMessageInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Message>>;

    /**
     * Get message info
     */
    getMessageInfo(requestParameters: GetMessageInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Message>;

    /**
     * 
     * @summary Send message to blockchain
     * @param {SendMessageRequest} [sendMessageRequest] Data that is expected
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MessageApiInterface
     */
    sendMessageRaw(requestParameters: SendMessageOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MessageID>>;

    /**
     * Send message to blockchain
     */
    sendMessage(requestParameters: SendMessageOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MessageID>;

}

/**
 * 
 */
export class MessageApi extends runtime.BaseAPI implements MessageApiInterface {

    /**
     * Get message info
     */
    async getMessageInfoRaw(requestParameters: GetMessageInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Message>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling getMessageInfo().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/message/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => MessageFromJSON(jsonValue));
    }

    /**
     * Get message info
     */
    async getMessageInfo(requestParameters: GetMessageInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Message> {
        const response = await this.getMessageInfoRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Send message to blockchain
     */
    async sendMessageRaw(requestParameters: SendMessageOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MessageID>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/v1/message/send`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: SendMessageRequestToJSON(requestParameters['sendMessageRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => MessageIDFromJSON(jsonValue));
    }

    /**
     * Send message to blockchain
     */
    async sendMessage(requestParameters: SendMessageOperationRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MessageID> {
        const response = await this.sendMessageRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
