/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * The configuration for the consensus protocol above catchain.
 * @export
 * @interface BlockchainConfig29
 */
export interface BlockchainConfig29 {
    /**
     * 
     * @type {number}
     * @memberof BlockchainConfig29
     */
    flags?: number;
    /**
     * 
     * @type {boolean}
     * @memberof BlockchainConfig29
     */
    newCatchainIds?: boolean;
    /**
     * 
     * @type {number}
     * @memberof BlockchainConfig29
     */
    roundCandidates: number;
    /**
     * 
     * @type {number}
     * @memberof BlockchainConfig29
     */
    nextCandidateDelayMs: number;
    /**
     * 
     * @type {number}
     * @memberof BlockchainConfig29
     */
    consensusTimeoutMs: number;
    /**
     * 
     * @type {number}
     * @memberof BlockchainConfig29
     */
    fastAttempts: number;
    /**
     * 
     * @type {number}
     * @memberof BlockchainConfig29
     */
    attemptDuration: number;
    /**
     * 
     * @type {number}
     * @memberof BlockchainConfig29
     */
    catchainMaxDeps: number;
    /**
     * 
     * @type {number}
     * @memberof BlockchainConfig29
     */
    maxBlockBytes: number;
    /**
     * 
     * @type {number}
     * @memberof BlockchainConfig29
     */
    maxCollatedBytes: number;
    /**
     * 
     * @type {number}
     * @memberof BlockchainConfig29
     */
    protoVersion?: number;
    /**
     * 
     * @type {number}
     * @memberof BlockchainConfig29
     */
    catchainMaxBlocksCoeff?: number;
}

/**
 * Check if a given object implements the BlockchainConfig29 interface.
 */
export function instanceOfBlockchainConfig29(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "roundCandidates" in value;
    isInstance = isInstance && "nextCandidateDelayMs" in value;
    isInstance = isInstance && "consensusTimeoutMs" in value;
    isInstance = isInstance && "fastAttempts" in value;
    isInstance = isInstance && "attemptDuration" in value;
    isInstance = isInstance && "catchainMaxDeps" in value;
    isInstance = isInstance && "maxBlockBytes" in value;
    isInstance = isInstance && "maxCollatedBytes" in value;

    return isInstance;
}

export function BlockchainConfig29FromJSON(json: any): BlockchainConfig29 {
    return BlockchainConfig29FromJSONTyped(json, false);
}

export function BlockchainConfig29FromJSONTyped(json: any, ignoreDiscriminator: boolean): BlockchainConfig29 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'flags': !exists(json, 'flags') ? undefined : json['flags'],
        'newCatchainIds': !exists(json, 'new_catchain_ids') ? undefined : json['new_catchain_ids'],
        'roundCandidates': json['round_candidates'],
        'nextCandidateDelayMs': json['next_candidate_delay_ms'],
        'consensusTimeoutMs': json['consensus_timeout_ms'],
        'fastAttempts': json['fast_attempts'],
        'attemptDuration': json['attempt_duration'],
        'catchainMaxDeps': json['catchain_max_deps'],
        'maxBlockBytes': json['max_block_bytes'],
        'maxCollatedBytes': json['max_collated_bytes'],
        'protoVersion': !exists(json, 'proto_version') ? undefined : json['proto_version'],
        'catchainMaxBlocksCoeff': !exists(json, 'catchain_max_blocks_coeff') ? undefined : json['catchain_max_blocks_coeff'],
    };
}

export function BlockchainConfig29ToJSON(value?: BlockchainConfig29 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'flags': value.flags,
        'new_catchain_ids': value.newCatchainIds,
        'round_candidates': value.roundCandidates,
        'next_candidate_delay_ms': value.nextCandidateDelayMs,
        'consensus_timeout_ms': value.consensusTimeoutMs,
        'fast_attempts': value.fastAttempts,
        'attempt_duration': value.attemptDuration,
        'catchain_max_deps': value.catchainMaxDeps,
        'max_block_bytes': value.maxBlockBytes,
        'max_collated_bytes': value.maxCollatedBytes,
        'proto_version': value.protoVersion,
        'catchain_max_blocks_coeff': value.catchainMaxBlocksCoeff,
    };
}

