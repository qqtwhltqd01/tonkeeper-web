/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BlockRaw } from './BlockRaw';
import {
    BlockRawFromJSON,
    BlockRawFromJSONTyped,
    BlockRawToJSON,
} from './BlockRaw';

/**
 * 
 * @export
 * @interface GetRawBlockchainBlockHeader200Response
 */
export interface GetRawBlockchainBlockHeader200Response {
    /**
     * 
     * @type {BlockRaw}
     * @memberof GetRawBlockchainBlockHeader200Response
     */
    id: BlockRaw;
    /**
     * 
     * @type {number}
     * @memberof GetRawBlockchainBlockHeader200Response
     */
    mode: number;
    /**
     * 
     * @type {string}
     * @memberof GetRawBlockchainBlockHeader200Response
     */
    headerProof: string;
}

/**
 * Check if a given object implements the GetRawBlockchainBlockHeader200Response interface.
 */
export function instanceOfGetRawBlockchainBlockHeader200Response(value: object): boolean {
    if (!('id' in value)) return false;
    if (!('mode' in value)) return false;
    if (!('headerProof' in value)) return false;
    return true;
}

export function GetRawBlockchainBlockHeader200ResponseFromJSON(json: any): GetRawBlockchainBlockHeader200Response {
    return GetRawBlockchainBlockHeader200ResponseFromJSONTyped(json, false);
}

export function GetRawBlockchainBlockHeader200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetRawBlockchainBlockHeader200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'id': BlockRawFromJSON(json['id']),
        'mode': json['mode'],
        'headerProof': json['header_proof'],
    };
}

export function GetRawBlockchainBlockHeader200ResponseToJSON(value?: GetRawBlockchainBlockHeader200Response | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': BlockRawToJSON(value['id']),
        'mode': value['mode'],
        'header_proof': value['headerProof'],
    };
}

