/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GasLimitPrices
 */
export interface GasLimitPrices {
    /**
     * 
     * @type {number}
     * @memberof GasLimitPrices
     */
    specialGasLimit?: number;
    /**
     * 
     * @type {number}
     * @memberof GasLimitPrices
     */
    flatGasLimit?: number;
    /**
     * 
     * @type {number}
     * @memberof GasLimitPrices
     */
    flatGasPrice?: number;
    /**
     * 
     * @type {number}
     * @memberof GasLimitPrices
     */
    gasPrice: number;
    /**
     * 
     * @type {number}
     * @memberof GasLimitPrices
     */
    gasLimit: number;
    /**
     * 
     * @type {number}
     * @memberof GasLimitPrices
     */
    gasCredit: number;
    /**
     * 
     * @type {number}
     * @memberof GasLimitPrices
     */
    blockGasLimit: number;
    /**
     * 
     * @type {number}
     * @memberof GasLimitPrices
     */
    freezeDueLimit: number;
    /**
     * 
     * @type {number}
     * @memberof GasLimitPrices
     */
    deleteDueLimit: number;
}

/**
 * Check if a given object implements the GasLimitPrices interface.
 */
export function instanceOfGasLimitPrices(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "gasPrice" in value;
    isInstance = isInstance && "gasLimit" in value;
    isInstance = isInstance && "gasCredit" in value;
    isInstance = isInstance && "blockGasLimit" in value;
    isInstance = isInstance && "freezeDueLimit" in value;
    isInstance = isInstance && "deleteDueLimit" in value;

    return isInstance;
}

export function GasLimitPricesFromJSON(json: any): GasLimitPrices {
    return GasLimitPricesFromJSONTyped(json, false);
}

export function GasLimitPricesFromJSONTyped(json: any, ignoreDiscriminator: boolean): GasLimitPrices {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'specialGasLimit': !exists(json, 'special_gas_limit') ? undefined : json['special_gas_limit'],
        'flatGasLimit': !exists(json, 'flat_gas_limit') ? undefined : json['flat_gas_limit'],
        'flatGasPrice': !exists(json, 'flat_gas_price') ? undefined : json['flat_gas_price'],
        'gasPrice': json['gas_price'],
        'gasLimit': json['gas_limit'],
        'gasCredit': json['gas_credit'],
        'blockGasLimit': json['block_gas_limit'],
        'freezeDueLimit': json['freeze_due_limit'],
        'deleteDueLimit': json['delete_due_limit'],
    };
}

export function GasLimitPricesToJSON(value?: GasLimitPrices | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'special_gas_limit': value.specialGasLimit,
        'flat_gas_limit': value.flatGasLimit,
        'flat_gas_price': value.flatGasPrice,
        'gas_price': value.gasPrice,
        'gas_limit': value.gasLimit,
        'gas_credit': value.gasCredit,
        'block_gas_limit': value.blockGasLimit,
        'freeze_due_limit': value.freezeDueLimit,
        'delete_due_limit': value.deleteDueLimit,
    };
}

