/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BlockRaw } from './BlockRaw';
import {
    BlockRawFromJSON,
    BlockRawFromJSONTyped,
    BlockRawToJSON,
} from './BlockRaw';

/**
 * 
 * @export
 * @interface GetRawTransactions200Response
 */
export interface GetRawTransactions200Response {
    /**
     * 
     * @type {Array<BlockRaw>}
     * @memberof GetRawTransactions200Response
     */
    ids: Array<BlockRaw>;
    /**
     * 
     * @type {string}
     * @memberof GetRawTransactions200Response
     */
    transactions: string;
}

/**
 * Check if a given object implements the GetRawTransactions200Response interface.
 */
export function instanceOfGetRawTransactions200Response(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "ids" in value;
    isInstance = isInstance && "transactions" in value;

    return isInstance;
}

export function GetRawTransactions200ResponseFromJSON(json: any): GetRawTransactions200Response {
    return GetRawTransactions200ResponseFromJSONTyped(json, false);
}

export function GetRawTransactions200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetRawTransactions200Response {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'ids': ((json['ids'] as Array<any>).map(BlockRawFromJSON)),
        'transactions': json['transactions'],
    };
}

export function GetRawTransactions200ResponseToJSON(value?: GetRawTransactions200Response | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ids': ((value.ids as Array<any>).map(BlockRawToJSON)),
        'transactions': value.transactions,
    };
}

