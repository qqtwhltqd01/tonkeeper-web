/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MisbehaviourPunishmentConfig
 */
export interface MisbehaviourPunishmentConfig {
    /**
     * 
     * @type {number}
     * @memberof MisbehaviourPunishmentConfig
     */
    defaultFlatFine: number;
    /**
     * 
     * @type {number}
     * @memberof MisbehaviourPunishmentConfig
     */
    defaultProportionalFine: number;
    /**
     * 
     * @type {number}
     * @memberof MisbehaviourPunishmentConfig
     */
    severityFlatMult: number;
    /**
     * 
     * @type {number}
     * @memberof MisbehaviourPunishmentConfig
     */
    severityProportionalMult: number;
    /**
     * 
     * @type {number}
     * @memberof MisbehaviourPunishmentConfig
     */
    unpunishableInterval: number;
    /**
     * 
     * @type {number}
     * @memberof MisbehaviourPunishmentConfig
     */
    longInterval: number;
    /**
     * 
     * @type {number}
     * @memberof MisbehaviourPunishmentConfig
     */
    longFlatMult: number;
    /**
     * 
     * @type {number}
     * @memberof MisbehaviourPunishmentConfig
     */
    longProportionalMult: number;
    /**
     * 
     * @type {number}
     * @memberof MisbehaviourPunishmentConfig
     */
    mediumInterval: number;
    /**
     * 
     * @type {number}
     * @memberof MisbehaviourPunishmentConfig
     */
    mediumFlatMult: number;
    /**
     * 
     * @type {number}
     * @memberof MisbehaviourPunishmentConfig
     */
    mediumProportionalMult: number;
}

/**
 * Check if a given object implements the MisbehaviourPunishmentConfig interface.
 */
export function instanceOfMisbehaviourPunishmentConfig(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "defaultFlatFine" in value;
    isInstance = isInstance && "defaultProportionalFine" in value;
    isInstance = isInstance && "severityFlatMult" in value;
    isInstance = isInstance && "severityProportionalMult" in value;
    isInstance = isInstance && "unpunishableInterval" in value;
    isInstance = isInstance && "longInterval" in value;
    isInstance = isInstance && "longFlatMult" in value;
    isInstance = isInstance && "longProportionalMult" in value;
    isInstance = isInstance && "mediumInterval" in value;
    isInstance = isInstance && "mediumFlatMult" in value;
    isInstance = isInstance && "mediumProportionalMult" in value;

    return isInstance;
}

export function MisbehaviourPunishmentConfigFromJSON(json: any): MisbehaviourPunishmentConfig {
    return MisbehaviourPunishmentConfigFromJSONTyped(json, false);
}

export function MisbehaviourPunishmentConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): MisbehaviourPunishmentConfig {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'defaultFlatFine': json['default_flat_fine'],
        'defaultProportionalFine': json['default_proportional_fine'],
        'severityFlatMult': json['severity_flat_mult'],
        'severityProportionalMult': json['severity_proportional_mult'],
        'unpunishableInterval': json['unpunishable_interval'],
        'longInterval': json['long_interval'],
        'longFlatMult': json['long_flat_mult'],
        'longProportionalMult': json['long_proportional_mult'],
        'mediumInterval': json['medium_interval'],
        'mediumFlatMult': json['medium_flat_mult'],
        'mediumProportionalMult': json['medium_proportional_mult'],
    };
}

export function MisbehaviourPunishmentConfigToJSON(value?: MisbehaviourPunishmentConfig | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'default_flat_fine': value.defaultFlatFine,
        'default_proportional_fine': value.defaultProportionalFine,
        'severity_flat_mult': value.severityFlatMult,
        'severity_proportional_mult': value.severityProportionalMult,
        'unpunishable_interval': value.unpunishableInterval,
        'long_interval': value.longInterval,
        'long_flat_mult': value.longFlatMult,
        'long_proportional_mult': value.longProportionalMult,
        'medium_interval': value.mediumInterval,
        'medium_flat_mult': value.mediumFlatMult,
        'medium_proportional_mult': value.mediumProportionalMult,
    };
}

