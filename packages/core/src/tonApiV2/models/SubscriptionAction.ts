/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AccountAddress } from './AccountAddress';
import {
    AccountAddressFromJSON,
    AccountAddressFromJSONTyped,
    AccountAddressToJSON,
} from './AccountAddress';

/**
 * 
 * @export
 * @interface SubscriptionAction
 */
export interface SubscriptionAction {
    /**
     * 
     * @type {AccountAddress}
     * @memberof SubscriptionAction
     */
    subscriber: AccountAddress;
    /**
     * 
     * @type {string}
     * @memberof SubscriptionAction
     */
    subscription: string;
    /**
     * 
     * @type {AccountAddress}
     * @memberof SubscriptionAction
     */
    beneficiary: AccountAddress;
    /**
     * 
     * @type {number}
     * @memberof SubscriptionAction
     */
    amount: number;
    /**
     * 
     * @type {boolean}
     * @memberof SubscriptionAction
     */
    initial: boolean;
}

/**
 * Check if a given object implements the SubscriptionAction interface.
 */
export function instanceOfSubscriptionAction(value: object): boolean {
    if (!('subscriber' in value)) return false;
    if (!('subscription' in value)) return false;
    if (!('beneficiary' in value)) return false;
    if (!('amount' in value)) return false;
    if (!('initial' in value)) return false;
    return true;
}

export function SubscriptionActionFromJSON(json: any): SubscriptionAction {
    return SubscriptionActionFromJSONTyped(json, false);
}

export function SubscriptionActionFromJSONTyped(json: any, ignoreDiscriminator: boolean): SubscriptionAction {
    if (json == null) {
        return json;
    }
    return {
        
        'subscriber': AccountAddressFromJSON(json['subscriber']),
        'subscription': json['subscription'],
        'beneficiary': AccountAddressFromJSON(json['beneficiary']),
        'amount': json['amount'],
        'initial': json['initial'],
    };
}

export function SubscriptionActionToJSON(value?: SubscriptionAction | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'subscriber': AccountAddressToJSON(value['subscriber']),
        'subscription': value['subscription'],
        'beneficiary': AccountAddressToJSON(value['beneficiary']),
        'amount': value['amount'],
        'initial': value['initial'],
    };
}

