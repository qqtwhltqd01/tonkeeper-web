/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface InscriptionBalance
 */
export interface InscriptionBalance {
    /**
     * 
     * @type {string}
     * @memberof InscriptionBalance
     */
    type: InscriptionBalanceTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof InscriptionBalance
     */
    ticker: string;
    /**
     * 
     * @type {string}
     * @memberof InscriptionBalance
     */
    balance: string;
    /**
     * 
     * @type {number}
     * @memberof InscriptionBalance
     */
    decimals: number;
}


/**
 * @export
 */
export const InscriptionBalanceTypeEnum = {
    Ton20: 'ton20',
    Gram20: 'gram20'
} as const;
export type InscriptionBalanceTypeEnum = typeof InscriptionBalanceTypeEnum[keyof typeof InscriptionBalanceTypeEnum];


/**
 * Check if a given object implements the InscriptionBalance interface.
 */
export function instanceOfInscriptionBalance(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "ticker" in value;
    isInstance = isInstance && "balance" in value;
    isInstance = isInstance && "decimals" in value;

    return isInstance;
}

export function InscriptionBalanceFromJSON(json: any): InscriptionBalance {
    return InscriptionBalanceFromJSONTyped(json, false);
}

export function InscriptionBalanceFromJSONTyped(json: any, ignoreDiscriminator: boolean): InscriptionBalance {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'ticker': json['ticker'],
        'balance': json['balance'],
        'decimals': json['decimals'],
    };
}

export function InscriptionBalanceToJSON(value?: InscriptionBalance | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'ticker': value.ticker,
        'balance': value.balance,
        'decimals': value.decimals,
    };
}

