/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BlockParamLimits
 */
export interface BlockParamLimits {
    /**
     * 
     * @type {number}
     * @memberof BlockParamLimits
     */
    underload: number;
    /**
     * 
     * @type {number}
     * @memberof BlockParamLimits
     */
    softLimit: number;
    /**
     * 
     * @type {number}
     * @memberof BlockParamLimits
     */
    hardLimit: number;
}

/**
 * Check if a given object implements the BlockParamLimits interface.
 */
export function instanceOfBlockParamLimits(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "underload" in value;
    isInstance = isInstance && "softLimit" in value;
    isInstance = isInstance && "hardLimit" in value;

    return isInstance;
}

export function BlockParamLimitsFromJSON(json: any): BlockParamLimits {
    return BlockParamLimitsFromJSONTyped(json, false);
}

export function BlockParamLimitsFromJSONTyped(json: any, ignoreDiscriminator: boolean): BlockParamLimits {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'underload': json['underload'],
        'softLimit': json['soft_limit'],
        'hardLimit': json['hard_limit'],
    };
}

export function BlockParamLimitsToJSON(value?: BlockParamLimits | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'underload': value.underload,
        'soft_limit': value.softLimit,
        'hard_limit': value.hardLimit,
    };
}

