/* tslint:disable */
/* eslint-disable */
/**
 * gasless TRON service REST api
 * Service to publish TRON transactions
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TronToken } from './TronToken';
import {
    TronTokenFromJSON,
    TronTokenFromJSONTyped,
    TronTokenToJSON,
} from './TronToken';

/**
 * 
 * @export
 * @interface ReceiveTRC20Action
 */
export interface ReceiveTRC20Action {
    /**
     * 
     * @type {string}
     * @memberof ReceiveTRC20Action
     */
    sender: string;
    /**
     * amount in quanta of tokens
     * @type {string}
     * @memberof ReceiveTRC20Action
     */
    amount: string;
    /**
     * 
     * @type {TronToken}
     * @memberof ReceiveTRC20Action
     */
    token: TronToken;
}

/**
 * Check if a given object implements the ReceiveTRC20Action interface.
 */
export function instanceOfReceiveTRC20Action(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "sender" in value;
    isInstance = isInstance && "amount" in value;
    isInstance = isInstance && "token" in value;

    return isInstance;
}

export function ReceiveTRC20ActionFromJSON(json: any): ReceiveTRC20Action {
    return ReceiveTRC20ActionFromJSONTyped(json, false);
}

export function ReceiveTRC20ActionFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReceiveTRC20Action {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'sender': json['sender'],
        'amount': json['amount'],
        'token': TronTokenFromJSON(json['token']),
    };
}

export function ReceiveTRC20ActionToJSON(value?: ReceiveTRC20Action | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'sender': value.sender,
        'amount': value.amount,
        'token': TronTokenToJSON(value.token),
    };
}

