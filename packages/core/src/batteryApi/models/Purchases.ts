/* tslint:disable */
/* eslint-disable */
/**
 * Custodial-Battery REST API.
 * REST API for Custodial Battery which provides gas to different networks to help execute transactions.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PurchasesPurchasesInner } from './PurchasesPurchasesInner';
import {
    PurchasesPurchasesInnerFromJSON,
    PurchasesPurchasesInnerFromJSONTyped,
    PurchasesPurchasesInnerToJSON,
} from './PurchasesPurchasesInner';

/**
 * 
 * @export
 * @interface Purchases
 */
export interface Purchases {
    /**
     * 
     * @type {number}
     * @memberof Purchases
     */
    totalPurchases: number;
    /**
     * 
     * @type {Array<PurchasesPurchasesInner>}
     * @memberof Purchases
     */
    purchases: Array<PurchasesPurchasesInner>;
}

/**
 * Check if a given object implements the Purchases interface.
 */
export function instanceOfPurchases(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "totalPurchases" in value;
    isInstance = isInstance && "purchases" in value;

    return isInstance;
}

export function PurchasesFromJSON(json: any): Purchases {
    return PurchasesFromJSONTyped(json, false);
}

export function PurchasesFromJSONTyped(json: any, ignoreDiscriminator: boolean): Purchases {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'totalPurchases': json['total_purchases'],
        'purchases': ((json['purchases'] as Array<any>).map(PurchasesPurchasesInnerFromJSON)),
    };
}

export function PurchasesToJSON(value?: Purchases | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'total_purchases': value.totalPurchases,
        'purchases': ((value.purchases as Array<any>).map(PurchasesPurchasesInnerToJSON)),
    };
}

