/* tslint:disable */
/* eslint-disable */
/**
 * Custodial-Battery REST API.
 * REST API for Custodial Battery which provides gas to different networks to help execute transactions.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TransactionsTransactionsInner } from './TransactionsTransactionsInner';
import {
    TransactionsTransactionsInnerFromJSON,
    TransactionsTransactionsInnerFromJSONTyped,
    TransactionsTransactionsInnerToJSON,
} from './TransactionsTransactionsInner';

/**
 * 
 * @export
 * @interface Transactions
 */
export interface Transactions {
    /**
     * 
     * @type {number}
     * @memberof Transactions
     */
    totalTransactions: number;
    /**
     * if set, then there are more transactions to be loaded. Use this value as offset parameter in the next request.
     * @type {number}
     * @memberof Transactions
     */
    nextOffset?: number;
    /**
     * 
     * @type {Array<TransactionsTransactionsInner>}
     * @memberof Transactions
     */
    transactions: Array<TransactionsTransactionsInner>;
}

/**
 * Check if a given object implements the Transactions interface.
 */
export function instanceOfTransactions(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "totalTransactions" in value;
    isInstance = isInstance && "transactions" in value;

    return isInstance;
}

export function TransactionsFromJSON(json: any): Transactions {
    return TransactionsFromJSONTyped(json, false);
}

export function TransactionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): Transactions {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'totalTransactions': json['total_transactions'],
        'nextOffset': !exists(json, 'next_offset') ? undefined : json['next_offset'],
        'transactions': ((json['transactions'] as Array<any>).map(TransactionsTransactionsInnerFromJSON)),
    };
}

export function TransactionsToJSON(value?: Transactions | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'total_transactions': value.totalTransactions,
        'next_offset': value.nextOffset,
        'transactions': ((value.transactions as Array<any>).map(TransactionsTransactionsInnerToJSON)),
    };
}

