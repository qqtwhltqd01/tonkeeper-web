/* tslint:disable */
/* eslint-disable */
/**
 * Custodial-Battery REST API.
 * REST API for Custodial Battery which provides gas to different networks to help execute transactions.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PurchasesPurchasesInnerRefundInformationRefunded } from './PurchasesPurchasesInnerRefundInformationRefunded';
import {
    PurchasesPurchasesInnerRefundInformationRefundedFromJSON,
    PurchasesPurchasesInnerRefundInformationRefundedFromJSONTyped,
    PurchasesPurchasesInnerRefundInformationRefundedToJSON,
} from './PurchasesPurchasesInnerRefundInformationRefunded';

/**
 * 
 * @export
 * @interface PurchasesPurchasesInnerRefundInformation
 */
export interface PurchasesPurchasesInnerRefundInformation {
    /**
     * 
     * @type {boolean}
     * @memberof PurchasesPurchasesInnerRefundInformation
     */
    fullyRefunded: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PurchasesPurchasesInnerRefundInformation
     */
    partiallyRefunded: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PurchasesPurchasesInnerRefundInformation
     */
    pendingRefund: boolean;
    /**
     * 
     * @type {PurchasesPurchasesInnerRefundInformationRefunded}
     * @memberof PurchasesPurchasesInnerRefundInformation
     */
    refunded?: PurchasesPurchasesInnerRefundInformationRefunded;
    /**
     * 
     * @type {PurchasesPurchasesInnerRefundInformationRefunded}
     * @memberof PurchasesPurchasesInnerRefundInformation
     */
    refundable?: PurchasesPurchasesInnerRefundInformationRefunded;
}

/**
 * Check if a given object implements the PurchasesPurchasesInnerRefundInformation interface.
 */
export function instanceOfPurchasesPurchasesInnerRefundInformation(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "fullyRefunded" in value;
    isInstance = isInstance && "partiallyRefunded" in value;
    isInstance = isInstance && "pendingRefund" in value;

    return isInstance;
}

export function PurchasesPurchasesInnerRefundInformationFromJSON(json: any): PurchasesPurchasesInnerRefundInformation {
    return PurchasesPurchasesInnerRefundInformationFromJSONTyped(json, false);
}

export function PurchasesPurchasesInnerRefundInformationFromJSONTyped(json: any, ignoreDiscriminator: boolean): PurchasesPurchasesInnerRefundInformation {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'fullyRefunded': json['fully_refunded'],
        'partiallyRefunded': json['partially_refunded'],
        'pendingRefund': json['pending_refund'],
        'refunded': !exists(json, 'refunded') ? undefined : PurchasesPurchasesInnerRefundInformationRefundedFromJSON(json['refunded']),
        'refundable': !exists(json, 'refundable') ? undefined : PurchasesPurchasesInnerRefundInformationRefundedFromJSON(json['refundable']),
    };
}

export function PurchasesPurchasesInnerRefundInformationToJSON(value?: PurchasesPurchasesInnerRefundInformation | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'fully_refunded': value.fullyRefunded,
        'partially_refunded': value.partiallyRefunded,
        'pending_refund': value.pendingRefund,
        'refunded': PurchasesPurchasesInnerRefundInformationRefundedToJSON(value.refunded),
        'refundable': PurchasesPurchasesInnerRefundInformationRefundedToJSON(value.refundable),
    };
}

