/* tslint:disable */
/* eslint-disable */
/**
 * Custodial-Battery REST API.
 * REST API for Custodial Battery which provides gas to different networks to help execute transactions.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PromoCodeBatteryPurchaseStatusError } from './PromoCodeBatteryPurchaseStatusError';
import {
    PromoCodeBatteryPurchaseStatusErrorFromJSON,
    PromoCodeBatteryPurchaseStatusErrorFromJSONTyped,
    PromoCodeBatteryPurchaseStatusErrorToJSON,
} from './PromoCodeBatteryPurchaseStatusError';

/**
 * 
 * @export
 * @interface PromoCodeBatteryPurchaseStatus
 */
export interface PromoCodeBatteryPurchaseStatus {
    /**
     * 
     * @type {string}
     * @memberof PromoCodeBatteryPurchaseStatus
     */
    balanceChange: string;
    /**
     * 
     * @type {boolean}
     * @memberof PromoCodeBatteryPurchaseStatus
     */
    success: boolean;
    /**
     * 
     * @type {PromoCodeBatteryPurchaseStatusError}
     * @memberof PromoCodeBatteryPurchaseStatus
     */
    error?: PromoCodeBatteryPurchaseStatusError;
}

/**
 * Check if a given object implements the PromoCodeBatteryPurchaseStatus interface.
 */
export function instanceOfPromoCodeBatteryPurchaseStatus(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "balanceChange" in value;
    isInstance = isInstance && "success" in value;

    return isInstance;
}

export function PromoCodeBatteryPurchaseStatusFromJSON(json: any): PromoCodeBatteryPurchaseStatus {
    return PromoCodeBatteryPurchaseStatusFromJSONTyped(json, false);
}

export function PromoCodeBatteryPurchaseStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): PromoCodeBatteryPurchaseStatus {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'balanceChange': json['balance_change'],
        'success': json['success'],
        'error': !exists(json, 'error') ? undefined : PromoCodeBatteryPurchaseStatusErrorFromJSON(json['error']),
    };
}

export function PromoCodeBatteryPurchaseStatusToJSON(value?: PromoCodeBatteryPurchaseStatus | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'balance_change': value.balanceChange,
        'success': value.success,
        'error': PromoCodeBatteryPurchaseStatusErrorToJSON(value.error),
    };
}

