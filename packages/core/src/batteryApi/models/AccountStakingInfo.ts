/* tslint:disable */
/* eslint-disable */
/**
 * Custodial-Battery REST API.
 * REST API for Custodial Battery which provides gas to different networks to help execute transactions.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AccountStakingInfo
 */
export interface AccountStakingInfo {
    /**
     * 
     * @type {string}
     * @memberof AccountStakingInfo
     */
    pool: string;
    /**
     * 
     * @type {number}
     * @memberof AccountStakingInfo
     */
    amount: number;
    /**
     * 
     * @type {number}
     * @memberof AccountStakingInfo
     */
    pendingDeposit: number;
    /**
     * 
     * @type {number}
     * @memberof AccountStakingInfo
     */
    pendingWithdraw: number;
    /**
     * 
     * @type {number}
     * @memberof AccountStakingInfo
     */
    readyWithdraw: number;
}

/**
 * Check if a given object implements the AccountStakingInfo interface.
 */
export function instanceOfAccountStakingInfo(value: object): value is AccountStakingInfo {
    if (!('pool' in value) || value['pool'] === undefined) return false;
    if (!('amount' in value) || value['amount'] === undefined) return false;
    if (!('pendingDeposit' in value) || value['pendingDeposit'] === undefined) return false;
    if (!('pendingWithdraw' in value) || value['pendingWithdraw'] === undefined) return false;
    if (!('readyWithdraw' in value) || value['readyWithdraw'] === undefined) return false;
    return true;
}

export function AccountStakingInfoFromJSON(json: any): AccountStakingInfo {
    return AccountStakingInfoFromJSONTyped(json, false);
}

export function AccountStakingInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccountStakingInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'pool': json['pool'],
        'amount': json['amount'],
        'pendingDeposit': json['pending_deposit'],
        'pendingWithdraw': json['pending_withdraw'],
        'readyWithdraw': json['ready_withdraw'],
    };
}

  export function AccountStakingInfoToJSON(json: any): AccountStakingInfo {
      return AccountStakingInfoToJSONTyped(json, false);
  }

  export function AccountStakingInfoToJSONTyped(value?: AccountStakingInfo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'pool': value['pool'],
        'amount': value['amount'],
        'pending_deposit': value['pendingDeposit'],
        'pending_withdraw': value['pendingWithdraw'],
        'ready_withdraw': value['readyWithdraw'],
    };
}

