/* tslint:disable */
/* eslint-disable */
/**
 * Custodial-Battery REST API.
 * REST API for Custodial Battery which provides gas to different networks to help execute transactions.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PurchasesPurchasesInnerRefundInformationRefunded
 */
export interface PurchasesPurchasesInnerRefundInformationRefunded {
    /**
     * 
     * @type {string}
     * @memberof PurchasesPurchasesInnerRefundInformationRefunded
     */
    amount: string;
    /**
     * 
     * @type {number}
     * @memberof PurchasesPurchasesInnerRefundInformationRefunded
     */
    charges: number;
}

/**
 * Check if a given object implements the PurchasesPurchasesInnerRefundInformationRefunded interface.
 */
export function instanceOfPurchasesPurchasesInnerRefundInformationRefunded(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "amount" in value;
    isInstance = isInstance && "charges" in value;

    return isInstance;
}

export function PurchasesPurchasesInnerRefundInformationRefundedFromJSON(json: any): PurchasesPurchasesInnerRefundInformationRefunded {
    return PurchasesPurchasesInnerRefundInformationRefundedFromJSONTyped(json, false);
}

export function PurchasesPurchasesInnerRefundInformationRefundedFromJSONTyped(json: any, ignoreDiscriminator: boolean): PurchasesPurchasesInnerRefundInformationRefunded {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'amount': json['amount'],
        'charges': json['charges'],
    };
}

export function PurchasesPurchasesInnerRefundInformationRefundedToJSON(value?: PurchasesPurchasesInnerRefundInformationRefunded | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'amount': value.amount,
        'charges': value.charges,
    };
}

