/* tslint:disable */
/* eslint-disable */
/**
 * Custodial-Battery REST API.
 * REST API for Custodial Battery which provides gas to different networks to help execute transactions.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TransactionsTransactionsInner
 */
export interface TransactionsTransactionsInner {
    /**
     * 
     * @type {string}
     * @memberof TransactionsTransactionsInner
     */
    id: string;
    /**
     * represents the amount of money paid by the user for this transaction.
     * @type {string}
     * @memberof TransactionsTransactionsInner
     */
    paidAmount: string;
    /**
     * 
     * @type {string}
     * @memberof TransactionsTransactionsInner
     */
    status: TransactionsTransactionsInnerStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof TransactionsTransactionsInner
     */
    createdAt: string;
}


/**
 * @export
 */
export const TransactionsTransactionsInnerStatusEnum = {
    Pending: 'pending',
    Completed: 'completed',
    Failed: 'failed'
} as const;
export type TransactionsTransactionsInnerStatusEnum = typeof TransactionsTransactionsInnerStatusEnum[keyof typeof TransactionsTransactionsInnerStatusEnum];


/**
 * Check if a given object implements the TransactionsTransactionsInner interface.
 */
export function instanceOfTransactionsTransactionsInner(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "paidAmount" in value;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "createdAt" in value;

    return isInstance;
}

export function TransactionsTransactionsInnerFromJSON(json: any): TransactionsTransactionsInner {
    return TransactionsTransactionsInnerFromJSONTyped(json, false);
}

export function TransactionsTransactionsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionsTransactionsInner {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'paidAmount': json['paid_amount'],
        'status': json['status'],
        'createdAt': json['created_at'],
    };
}

export function TransactionsTransactionsInnerToJSON(value?: TransactionsTransactionsInner | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'paid_amount': value.paidAmount,
        'status': value.status,
        'created_at': value.createdAt,
    };
}

