/* tslint:disable */
/* eslint-disable */
/**
 * Custodial-Battery REST API.
 * REST API for Custodial Battery which provides gas to different networks to help execute transactions.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GetTonConnectPayloadDefaultResponse
 */
export interface GetTonConnectPayloadDefaultResponse {
    /**
     * 
     * @type {string}
     * @memberof GetTonConnectPayloadDefaultResponse
     */
    error: string;
    /**
     * 
     * @type {string}
     * @memberof GetTonConnectPayloadDefaultResponse
     */
    errorKey?: string;
    /**
     * 
     * @type {string}
     * @memberof GetTonConnectPayloadDefaultResponse
     */
    errorDetails?: string;
}

/**
 * Check if a given object implements the GetTonConnectPayloadDefaultResponse interface.
 */
export function instanceOfGetTonConnectPayloadDefaultResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "error" in value;

    return isInstance;
}

export function GetTonConnectPayloadDefaultResponseFromJSON(json: any): GetTonConnectPayloadDefaultResponse {
    return GetTonConnectPayloadDefaultResponseFromJSONTyped(json, false);
}

export function GetTonConnectPayloadDefaultResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetTonConnectPayloadDefaultResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'error': json['error'],
        'errorKey': !exists(json, 'error-key') ? undefined : json['error-key'],
        'errorDetails': !exists(json, 'error-details') ? undefined : json['error-details'],
    };
}

export function GetTonConnectPayloadDefaultResponseToJSON(value?: GetTonConnectPayloadDefaultResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'error': value.error,
        'error-key': value.errorKey,
        'error-details': value.errorDetails,
    };
}

