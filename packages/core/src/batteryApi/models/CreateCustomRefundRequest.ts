/* tslint:disable */
/* eslint-disable */
/**
 * Custodial-Battery REST API.
 * REST API for Custodial Battery which provides gas to different networks to help execute transactions.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateCustomRefundRequest
 */
export interface CreateCustomRefundRequest {
    /**
     * 
     * @type {number}
     * @memberof CreateCustomRefundRequest
     */
    relayerEventId?: number;
    /**
     * 
     * @type {string}
     * @memberof CreateCustomRefundRequest
     */
    amount: string;
    /**
     * 
     * @type {string}
     * @memberof CreateCustomRefundRequest
     */
    currency: string;
    /**
     * 
     * @type {string}
     * @memberof CreateCustomRefundRequest
     */
    comment: string;
    /**
     * 
     * @type {string}
     * @memberof CreateCustomRefundRequest
     */
    reason: string;
    /**
     * 
     * @type {string}
     * @memberof CreateCustomRefundRequest
     */
    destination: string;
}

/**
 * Check if a given object implements the CreateCustomRefundRequest interface.
 */
export function instanceOfCreateCustomRefundRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "amount" in value;
    isInstance = isInstance && "currency" in value;
    isInstance = isInstance && "comment" in value;
    isInstance = isInstance && "reason" in value;
    isInstance = isInstance && "destination" in value;

    return isInstance;
}

export function CreateCustomRefundRequestFromJSON(json: any): CreateCustomRefundRequest {
    return CreateCustomRefundRequestFromJSONTyped(json, false);
}

export function CreateCustomRefundRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateCustomRefundRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'relayerEventId': !exists(json, 'relayer_event_id') ? undefined : json['relayer_event_id'],
        'amount': json['amount'],
        'currency': json['currency'],
        'comment': json['comment'],
        'reason': json['reason'],
        'destination': json['destination'],
    };
}

export function CreateCustomRefundRequestToJSON(value?: CreateCustomRefundRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'relayer_event_id': value.relayerEventId,
        'amount': value.amount,
        'currency': value.currency,
        'comment': value.comment,
        'reason': value.reason,
        'destination': value.destination,
    };
}

