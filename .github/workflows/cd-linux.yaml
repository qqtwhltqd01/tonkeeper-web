name: Tonkeeper Desktop CD
on:
    # Allows you to run this workflow manually from the Actions a tab
    workflow_dispatch:

    push:
        branches:
            - feature/cd
jobs:
    desktop-build:
        name: desktop-build
        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]
                node-version: [20.7.0]

        runs-on: ${{ matrix.os }}

        steps:
            - name: Checkout to git repository
              uses: actions/checkout@v4

            - name: Set up Node
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Enable Corepack
              run: |
                  corepack enable

            - name: Decode service account into a file
              env:
                  CREDENTIALS: ${{ secrets.APPLE_API_KEY }}
              run: |
                  echo $CREDENTIALS > AuthKey.p8

            - name: Run install
              uses: borales/actions-yarn@v4
              with:
                  cmd: install

            - name: Run build packages
              uses: borales/actions-yarn@v4
              with:
                  cmd: build:pkg

            - name: Run build arm distributive
              uses: borales/actions-yarn@v4
              env:
                  APPLE_API_KEY: ${{ github.workspace }}/AuthKey.p8
                  APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
                  APPLE_API_ISSUER: ${{ secrets.APPLE_API_ISSUER }}
                  REACT_APP_AMPLITUDE: ${{ secrets.REACT_APP_AMPLITUDE }}
              with:
                  cmd: make:arm
                  dir: 'apps/desktop'

            - name: Run build intel distributive
              uses: borales/actions-yarn@v4
              env:
                  APPLE_API_KEY: ${{ github.workspace }}/AuthKey.p8
                  APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
                  APPLE_API_ISSUER: ${{ secrets.APPLE_API_ISSUER }}
                  REACT_APP_AMPLITUDE: ${{ secrets.REACT_APP_AMPLITUDE }}
              with:
                  cmd: make:intel
                  dir: 'apps/desktop'

            - name: Run build universal distributive
              if: ${{ matrix.os }} == 'macos-latest'
              uses: borales/actions-yarn@v4
              env:
                  APPLE_API_KEY: ${{ github.workspace }}/AuthKey.p8
                  APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
                  APPLE_API_ISSUER: ${{ secrets.APPLE_API_ISSUER }}
                  REACT_APP_AMPLITUDE: ${{ secrets.REACT_APP_AMPLITUDE }}
              with:
                  cmd: make:universal
                  dir: 'apps/desktop'
